<?php

namespace Proxies\__CG__\SS\PlatformBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Offre extends \SS\PlatformBundle\Entity\Offre implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'id', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'intitule', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'domaine', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'missions', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'profil', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'duree', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'dateOffre', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'auteur', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'entreprise', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'avis'];
        }

        return ['__isInitialized__', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'id', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'intitule', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'domaine', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'missions', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'profil', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'duree', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'dateOffre', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'auteur', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'entreprise', '' . "\0" . 'SS\\PlatformBundle\\Entity\\Offre' . "\0" . 'avis'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Offre $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntitule($intitule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntitule', [$intitule]);

        return parent::setIntitule($intitule);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntitule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntitule', []);

        return parent::getIntitule();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaine($domaine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaine', [$domaine]);

        return parent::setDomaine($domaine);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaine', []);

        return parent::getDomaine();
    }

    /**
     * {@inheritDoc}
     */
    public function setMissions($missions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMissions', [$missions]);

        return parent::setMissions($missions);
    }

    /**
     * {@inheritDoc}
     */
    public function getMissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMissions', []);

        return parent::getMissions();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfil($profil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfil', [$profil]);

        return parent::setProfil($profil);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfil', []);

        return parent::getProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', [$duree]);

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', []);

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOffre($dateOffre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOffre', [$dateOffre]);

        return parent::setDateOffre($dateOffre);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOffre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOffre', []);

        return parent::getDateOffre();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuteur(\SS\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuteur', [$user]);

        return parent::setAuteur($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuteur', []);

        return parent::getAuteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntreprise(\SS\PlatformBundle\Entity\Entreprise $entreprise)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntreprise', [$entreprise]);

        return parent::setEntreprise($entreprise);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntreprise()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntreprise', []);

        return parent::getEntreprise();
    }

    /**
     * {@inheritDoc}
     */
    public function addAvis(\SS\PlatformBundle\Entity\Commentaire $commentaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAvis', [$commentaire]);

        return parent::addAvis($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvis', []);

        return parent::getAvis();
    }

}
